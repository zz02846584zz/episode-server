import { IServiceFactory } from '../interface';
/**
 * 多客户端工厂实现
 */
export declare abstract class ServiceFactory<T> implements IServiceFactory<T> {
    protected clients: Map<string, T>;
    protected options: {};
    protected initClients(options?: any): Promise<void>;
    get<U = T>(id?: string): U;
    has(id: string): boolean;
    createInstance(config: any, clientName?: any): Promise<T | undefined>;
    abstract getName(): string;
    protected abstract createClient(config: any, clientName: any): Promise<T | void> | (T | void);
    protected destroyClient(client: T): Promise<void>;
    stop(): Promise<void>;
    getDefaultClientName(): string;
}
//# sourceMappingURL=serviceFactory.d.ts.map