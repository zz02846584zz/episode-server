/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import http = require('http');
import https = require('https');
type MimeType = 'text' | 'json' | undefined;
interface IOptions extends https.RequestOptions {
    headers?: any;
    contentType?: MimeType;
    dataType?: MimeType;
    data?: any;
    timeout?: number;
}
export interface IResponse<ResType = any> extends http.IncomingMessage {
    status: number;
    data: Buffer | string | ResType;
}
export declare function makeHttpRequest<ResType>(url: string, options?: IOptions): Promise<IResponse<ResType>>;
/**
 * A simple http client
 */
export declare class HttpClient {
    readonly defaultOptions: Pick<IOptions, 'headers' | 'timeout' | 'method'>;
    constructor(defaultOptions?: Pick<IOptions, 'headers' | 'timeout' | 'method'>);
    request(url: string, options?: IOptions): Promise<IResponse>;
}
export {};
//# sourceMappingURL=httpclient.d.ts.map