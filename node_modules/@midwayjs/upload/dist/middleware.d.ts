/// <reference types="node" />
import { IMiddleware, IMidwayLogger, IgnoreMatcher } from '@midwayjs/core';
import { UploadOptions } from '.';
export declare class UploadMiddleware implements IMiddleware<any, any> {
    uploadConfig: UploadOptions;
    logger: IMidwayLogger;
    private uploadWhiteListMap;
    private uploadFileMimeTypeMap;
    match: IgnoreMatcher<any>[];
    ignore: IgnoreMatcher<any>[];
    init(): Promise<void>;
    resolve(app: any): (req: any, res: any, next: any) => Promise<any>;
    execUpload(ctx: any, req: any, res: any, next: any, isExpress: any): Promise<any>;
    getUploadBoundary(request: any): false | string;
    isReadableStream(req: any, isExpress: any): boolean;
    checkAndGetExt(filename: any): string | boolean;
    checkFileType(ext: string, data: Buffer): Promise<{
        passed: boolean;
        mime?: string;
        current?: string;
    }>;
    static getName(): string;
}
//# sourceMappingURL=middleware.d.ts.map