import { IMidwayFramework } from '@midwayjs/core';
import { ComponentModule } from './interface';
export declare function isTestEnvironment(): boolean;
export declare function isWin32(): boolean;
export declare function findFirstExistModule(moduleList: any): ComponentModule;
/**
 * transform a framework component or framework module to configuration class
 * @param Framework
 */
export declare function transformFrameworkToConfiguration<T extends IMidwayFramework<any, any, any>>(Framework: any, loadMode: 'commonjs' | 'esm'): Promise<{
    [key: string]: any;
    Configuration: any;
}>;
export declare function removeFile(file: string): Promise<void>;
export declare function mergeGlobalConfig(globalConfig: any, newConfigObject: Record<string, any>): any;
//# sourceMappingURL=utils.d.ts.map