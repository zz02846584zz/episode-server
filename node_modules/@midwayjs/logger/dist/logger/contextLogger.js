"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MidwayContextLogger = void 0;
class MidwayContextLogger {
    constructor(ctx, appLogger, options = {}) {
        this.ctx = ctx;
        this.appLogger = appLogger;
        this.options = options;
        if ('getParentLogger' in this.appLogger) {
            this.appLogger = this.appLogger.getParentLogger();
        }
    }
    log(...args) {
        if (!['debug', 'info', 'warn', 'error'].includes(args[0])) {
            args.unshift('info');
        }
        this.transformLog('log', args);
    }
    debug(...args) {
        this.transformLog('debug', args);
    }
    info(...args) {
        this.transformLog('info', args);
    }
    warn(...args) {
        this.transformLog('warn', args);
    }
    error(...args) {
        this.transformLog('error', args);
    }
    getContext() {
        return this.ctx;
    }
    transformLog(level, args) {
        return this.appLogger[level].apply(this.appLogger, [
            ...args,
            {
                label: this.formatContextLabel(),
                ctx: this.ctx,
                format: this.options.contextFormat,
                jsonFormat: this.options.jsonFormat,
            },
        ]);
    }
    /**
     * @deprecated
     */
    formatContextLabel() {
        return '';
    }
}
exports.MidwayContextLogger = MidwayContextLogger;
//# sourceMappingURL=contextLogger.js.map