"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoolWxPay = void 0;
const core_1 = require("@cool-midway/core");
const decorator_1 = require("@midwayjs/decorator");
const cid = require("@4a/cid");
const WxPay = require("wechatpay-node-v3");
/**
 * 微信支付
 */
let CoolWxPay = class CoolWxPay {
    async init() {
        if (this.coolWxPay)
            this.pay = new WxPay(this.coolWxPay);
    }
    /**
     * 获得微信支付SDK实例
     * @returns
     */
    getInstance() {
        return this.pay;
    }
    /**
     * 签名
     * @param params
     * @returns
     */
    async signVerify(ctx) {
        if (!this.coolWxPay.key) {
            throw new core_1.CoolCommException('未配置key(v3 API密钥)');
        }
        const params = {
            apiSecret: this.coolWxPay.key,
            body: ctx.request.body,
            signature: ctx.headers['wechatpay-signature'],
            serial: ctx.headers['wechatpay-serial'],
            nonce: ctx.headers['wechatpay-nonce'],
            timestamp: ctx.headers['wechatpay-timestamp'],
        };
        return await this.pay.verifySign(params);
    }
    /**
     * 创建订单
     * @param length 订单长度
     * @returns
     */
    createOrderNum(length = 26) {
        return cid(length);
    }
    /**
     * 动态配置支付参数
     * @param config 微信配置
     * @returns
     */
    initPay(config) {
        return new WxPay(config);
    }
};
__decorate([
    (0, decorator_1.Config)('cool.pay.wx'),
    __metadata("design:type", Object)
], CoolWxPay.prototype, "coolWxPay", void 0);
__decorate([
    (0, decorator_1.Init)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], CoolWxPay.prototype, "init", null);
CoolWxPay = __decorate([
    (0, decorator_1.Provide)(),
    (0, decorator_1.Scope)(decorator_1.ScopeEnum.Singleton)
], CoolWxPay);
exports.CoolWxPay = CoolWxPay;
