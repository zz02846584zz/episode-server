"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoolAliPay = void 0;
const decorator_1 = require("@midwayjs/decorator");
const cid = require("@4a/cid");
const alipay_sdk_1 = require("alipay-sdk");
/**
 * 支付宝支付
 */
let CoolAliPay = class CoolAliPay {
    async init() {
        if (this.coolAlipay)
            this.pay = new alipay_sdk_1.default(this.coolAlipay);
    }
    /**
     * 获得支付宝支付SDK实例
     * @returns
     */
    getInstance() {
        return this.pay;
    }
    /**
     * 通知验签
     * @param postData {JSON} 服务端的消息内容
     * @param raw {Boolean} 是否使用 raw 内容而非 decode 内容验签
     */
    signVerify(postData, raw) {
        return this.pay.checkNotifySign(postData, raw);
    }
    /**
     * 创建订单
     * @param length 订单长度
     * @returns
     */
    createOrderNum(length = 26) {
        return cid(length);
    }
    /**
     * 动态配置支付参数
     * @param config 微信配置
     * @returns
     */
    initPay(config) {
        return new alipay_sdk_1.default(config);
    }
};
__decorate([
    (0, decorator_1.Config)('cool.pay.ali'),
    __metadata("design:type", Object)
], CoolAliPay.prototype, "coolAlipay", void 0);
__decorate([
    (0, decorator_1.Init)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], CoolAliPay.prototype, "init", null);
CoolAliPay = __decorate([
    (0, decorator_1.Provide)(),
    (0, decorator_1.Scope)(decorator_1.ScopeEnum.Singleton)
], CoolAliPay);
exports.CoolAliPay = CoolAliPay;
