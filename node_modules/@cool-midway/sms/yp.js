"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SmsYp = void 0;
const core_1 = require("@midwayjs/core");
const core_2 = require("@cool-midway/core");
const axios_1 = require("axios");
/**
 * 云片短信
 */
let SmsYp = class SmsYp {
    /**
     * 配置
     * @param config
     */
    setConfig(config) {
        this.config = config;
    }
    /**
    * 发送短信
    * @param phones 手机号 数组，需要加国家码如 ["+8612345678901"]
    * @param params 参数
    * @param config  signName 签名 template 模板
    * @returns
    */
    async send(phones, params, config) {
        const { apikey } = this.config;
        if (!config) {
            config = {
                signName: this.config.signName,
                template: this.config.template,
            };
        }
        if (!apikey) {
            throw new core_2.CoolCommException('请配置云片短信');
        }
        const headers = {
            Accept: 'application/json;charset=utf-8',
            'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',
        };
        const data = {
            apikey: apikey,
            mobile: phones,
            tpl_id: config.template,
            tpl_value: this.smsTplValue(params),
        };
        const result = await axios_1.default.post('https://sms.yunpian.com/v2/sms/tpl_single_send.json', data, { headers });
        if (result.data.code === 0) {
            return true;
        }
        return false;
    }
    /**
     * 获得短信模板值
     * @param obj
     * @returns
     */
    smsTplValue(obj) {
        const urlParams = [];
        for (let key in obj) {
            // eslint-disable-next-line no-prototype-builtins
            if (obj.hasOwnProperty(key)) {
                const encodedKey = encodeURIComponent(`#${key}#`);
                const encodedValue = encodeURIComponent(obj[key]);
                urlParams.push(`${encodedKey}=${encodedValue}`);
            }
        }
        return urlParams.join('&');
    }
};
__decorate([
    (0, core_1.Config)('cool.sms.yp'),
    __metadata("design:type", Object)
], SmsYp.prototype, "config", void 0);
SmsYp = __decorate([
    (0, core_1.Provide)()
], SmsYp);
exports.SmsYp = SmsYp;
