"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoolSms = void 0;
const core_1 = require("@midwayjs/core");
const yp_1 = require("./yp");
const ali_1 = require("./ali");
const tx_1 = require("./tx");
let CoolSms = class CoolSms {
    /**
     * 配置
     * @param config
     */
    setConfig(config) {
        this.smsYp.setConfig(config.yp);
        this.smsAli.setConfig(config.ali);
        this.smsTx.setConfig(config.tx);
        this.config = config;
    }
    /**
     * 发送验证码 模板字段名为：code
     * @param phone
     * @param config
     */
    async sendCode(phone, config) {
        const code = this.generateNumber();
        let params = {
            code
        };
        await this.send(phone, this.config.tx ? [code] : params, config);
        return code;
    }
    /**
     * 发送短信
     * @param phone
     * @param params
     * @param config
     * @returns
     */
    async send(phone, params, config) {
        if (this.config.ali) {
            return await this.smsAli.send(phone, params, config);
        }
        if (this.config.tx) {
            return await this.smsTx.send(phone, params, config);
        }
        if (this.config.yp) {
            return await this.smsYp.send(phone, params, config);
        }
        return true;
    }
    /**
     * 生成验证码
     */
    generateNumber(digits = 4) {
        if (digits <= 0) {
            return 0;
        }
        const min = Math.pow(10, digits - 1);
        const max = Math.pow(10, digits) - 1;
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }
};
__decorate([
    (0, core_1.Inject)(),
    __metadata("design:type", yp_1.SmsYp)
], CoolSms.prototype, "smsYp", void 0);
__decorate([
    (0, core_1.Inject)(),
    __metadata("design:type", ali_1.SmsAli)
], CoolSms.prototype, "smsAli", void 0);
__decorate([
    (0, core_1.Inject)(),
    __metadata("design:type", tx_1.SmsTx)
], CoolSms.prototype, "smsTx", void 0);
__decorate([
    (0, core_1.Config)('cool.sms'),
    __metadata("design:type", Object)
], CoolSms.prototype, "config", void 0);
CoolSms = __decorate([
    (0, core_1.Provide)()
], CoolSms);
exports.CoolSms = CoolSms;
