"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoolEventManager = void 0;
const decorator_1 = require("@midwayjs/decorator");
const Events = require("events");
const event_1 = require("../decorator/event");
/**
 * 事件
 */
let CoolEventManager = class CoolEventManager extends Events {
    async init() {
        const eventModules = (0, decorator_1.listModule)(event_1.COOL_CLS_EVENT_KEY);
        for (const module of eventModules) {
            this.handlerEvent(module);
        }
    }
    async handlerEvent(module) {
        const events = (0, decorator_1.getClassMetadata)(event_1.COOL_EVENT_KEY, module);
        for (const event of events) {
            const method = event.eventName ? event.eventName : event.propertyKey;
            this.on(method, async (...args) => {
                const moduleInstance = await this.app
                    .getApplicationContext()
                    .getAsync(module);
                moduleInstance[event.propertyKey](...args);
            });
        }
    }
};
__decorate([
    (0, decorator_1.App)(),
    __metadata("design:type", Object)
], CoolEventManager.prototype, "app", void 0);
__decorate([
    (0, decorator_1.Init)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], CoolEventManager.prototype, "init", null);
CoolEventManager = __decorate([
    (0, decorator_1.Provide)(),
    (0, decorator_1.Scope)(decorator_1.ScopeEnum.Singleton)
], CoolEventManager);
exports.CoolEventManager = CoolEventManager;
//# sourceMappingURL=index.js.map